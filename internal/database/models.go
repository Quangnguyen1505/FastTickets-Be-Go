// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type TwoFactorAuthTypeEnum string

const (
	TwoFactorAuthTypeEnumSMS   TwoFactorAuthTypeEnum = "SMS"
	TwoFactorAuthTypeEnumEMAIL TwoFactorAuthTypeEnum = "EMAIL"
	TwoFactorAuthTypeEnumAPP   TwoFactorAuthTypeEnum = "APP"
)

func (e *TwoFactorAuthTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TwoFactorAuthTypeEnum(s)
	case string:
		*e = TwoFactorAuthTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for TwoFactorAuthTypeEnum: %T", src)
	}
	return nil
}

type NullTwoFactorAuthTypeEnum struct {
	TwoFactorAuthTypeEnum TwoFactorAuthTypeEnum
	Valid                 bool // Valid is true if TwoFactorAuthTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTwoFactorAuthTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.TwoFactorAuthTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TwoFactorAuthTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTwoFactorAuthTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TwoFactorAuthTypeEnum), nil
}

type ContactMessage struct {
	ID        pgtype.UUID
	Name      string
	Email     string
	Phone     pgtype.Text
	Message   string
	Status    int16
	CreatedAt pgtype.Timestamptz
}

type PreGoAccUserBase9999 struct {
	UserID         int32
	UserAccount    string
	UserPassword   string
	UserSalt       string
	UserLoginTime  pgtype.Timestamp
	UserLogoutTime pgtype.Timestamp
	UserLoginIp    pgtype.Text
	UserCreatedAt  pgtype.Timestamp
	UserUpdatedAt  pgtype.Timestamp
	// Authentication is enabled for the user
	IsTwoFactorEnabled pgtype.Bool
}

type PreGoAccUserInfo9999 struct {
	UserID               int64
	UserAccount          string
	UserNickname         pgtype.Text
	UserAvatar           pgtype.Text
	UserState            int16
	UserMobile           pgtype.Text
	UserGender           pgtype.Int2
	UserBirthday         pgtype.Date
	UserEmail            pgtype.Text
	UserIsAuthentication int16
	CreatedAt            pgtype.Timestamp
	UpdatedAt            pgtype.Timestamp
}

type PreGoAccUserTwoFactor9999 struct {
	TwoFactorID         int32
	UserID              int32
	TwoFactorAuthType   TwoFactorAuthTypeEnum
	TwoFactorAuthSecret string
	TwoFactorPhone      pgtype.Text
	TwoFactorEmail      pgtype.Text
	TwoFactorIsActive   bool
	TwoFactorCreatedAt  pgtype.Timestamp
	TwoFactorUpdatedAt  pgtype.Timestamp
}

type PreGoAccUserVerify9999 struct {
	VerifyID        int32
	VerifyOtp       string
	VerifyKey       string
	VerifyKeyHash   string
	VerifyType      pgtype.Int4
	IsVerified      pgtype.Int4
	IsDeleted       pgtype.Int4
	VerifyCreatedAt pgtype.Timestamp
	VerifyUpdatedAt pgtype.Timestamp
}

type PreGoEvent struct {
	ID               pgtype.UUID
	EventName        string
	EventDescription pgtype.Text
	EventImageUrl    pgtype.Text
	EventActive      pgtype.Bool
	EventStart       pgtype.Timestamp
	EventEnd         pgtype.Timestamp
	UserID           pgtype.UUID
	CreatedAt        pgtype.Timestamp
	UpdatedAt        pgtype.Timestamp
}

type PreGoMenuFunction struct {
	ID          string
	Name        string
	Description pgtype.Text
	Url         pgtype.Text
	Active      pgtype.Bool
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
}

type PreGoSubMenuFunction struct {
	ID          string
	Name        string
	Description pgtype.Text
	Image       pgtype.Text
	Url         pgtype.Text
	Menufuncid  string
	CreatedAt   pgtype.Timestamp
	UpdatedAt   pgtype.Timestamp
}
